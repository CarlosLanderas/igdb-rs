use crate::v3::model::rating::AgeRating;
use crate::v3::model::{Category, Status};
use crate::v3::request_builder::RequestBuilder;
use std::collections::HashMap;
use std::vec::Vec;

struct GameResponse {
    age_ratings: AgeRating,
    aggregated_rating: f32,
    aggregated_rating_count: usize,
    alternative_names: Vec<usize>,
    artworks: Vec<usize>,
    bundles: usize,
    category: Category,
    collection: usize,
    cover: usize,
    created_at: u64,
    dlcs: usize,
    external_games: Vec<usize>,
    first_release_date: u64,
    follows: usize,
    franchise: usize,
    franchises: Vec<usize>,
    game_engines: Vec<usize>,
    game_modes: Vec<usize>,
    genres: Vec<usize>,
    hypes: usize,
    involved_companies: Vec<usize>,
    keywords: Vec<usize>,
    multiplayer_modes: Vec<usize>,
    name: String,
    parent_game: usize,
    platforms: Vec<usize>,
    player_perspectives: Vec<usize>,
    popularity: f32,
    pulse_count: usize,
    rating: f32,
    rating_count: usize,
    release_dates: Vec<usize>,
    screenshots: Vec<usize>,
    similar_games: usize,
    slug: String,
    standalone_expansions: usize,
    status: Status,
    storyline: String,
    summary: String,
    tags: Vec<usize>,
    themes: Vec<usize>,
    time_to_beat: Vec<usize>,
    total_rating: f32,
    total_rating_count: usize,
    updated_at: u64,
    url: String,
    version_parent: usize,
    version_title: String,
    videos: usize,
    websites: usize,
}
